<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>25</version>
    </parent>

    <groupId>org.apache.seatunnel</groupId>
    <artifactId>seatunnel-spark3x</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>SeaTunnel</name>

    <description>
        Production ready big data processing product based on Apache Spark and Apache Flink.
    </description>

    <url>https://github.com/apache/incubator-seatunnel</url>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:https://github.com/apache/incubator-seatunnel.git</connection>
        <developerConnection>scm:git:https://github.com/apache/incubator-seatunnel.git</developerConnection>
        <url>https://github.com/apache/incubator-seatunnel</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/apache/incubator-seatunnel/issues</url>
    </issueManagement>

    <mailingLists>
        <mailingList>
            <name>SeaTunnel Developer List</name>
            <post>dev@seatunnel.apache.org</post>
            <subscribe>dev-subscribe@seatunnel.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@seatunnel.apache.org</unsubscribe>
        </mailingList>
        <mailingList>
            <name>SeaTunnel Commits List</name>
            <post>commits@seatunnel.apache.org</post>
            <subscribe>commits-subscribe@seatunnel.apache.org</subscribe>
            <unsubscribe>commits-unsubscribe@seatunnel.apache.org</unsubscribe>
        </mailingList>
    </mailingLists>

    <modules>
        <module>seatunnel-config</module>
        <module>seatunnel-common</module>
        <module>seatunnel-apis</module>
        <module>seatunnel-core</module>
        <module>seatunnel-transforms</module>
        <module>seatunnel-connectors</module>
        <module>seatunnel-dist</module>
        <module>seatunnel-examples</module>
        <module>seatunnel-e2e</module>
    </modules>

    <properties>
        <revision>2.1.1-spark3x-oem</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
<!--        <scala.version>2.11.12</scala.version>-->
        <scala.version>2.12.14</scala.version>
        <scala.binary.version>2.12</scala.binary.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spark.version>3.1.1</spark.version>
        <spark.binary.version>3.1.1-h0.cbu.mrs.313.r10</spark.binary.version>
        <iceberg.version>0.13.1</iceberg.version>
        <hudi.version>0.9.0</hudi.version>
        <hadoop.binary.version>2.7</hadoop.binary.version>
        <hadoop.version>3.1.1</hadoop.version>
        <fastjson.version>1.2.80</fastjson.version>
        <jackson.version>2.12.6</jackson.version>
        <lombok.version>1.18.0</lombok.version>
        <mysql.version>8.0.16</mysql.version>
        <postgresql.version>42.3.3</postgresql.version>
        <skip.pmd.check>false</skip.pmd.check>
        <maven.deploy.skip>false</maven.deploy.skip>
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <checkstyle.fails.on.error>true</checkstyle.fails.on.error>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <scala-maven-plugin.version>3.3.1</scala-maven-plugin.version>
        <maven-compiler-plugin.version>2.0.2</maven-compiler-plugin.version>
        <maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>
        <spoiwo.version>1.8.0</spoiwo.version>
        <play-mailer.version>7.0.2</play-mailer.version>
        <phoenix-spark.version>5.0.0-HBase-2.0</phoenix-spark.version>
        <zkclient.version>0.3</zkclient.version>
        <elasticsearch6.client.version>6.3.1</elasticsearch6.client.version>
        <elasticsearch7.client.version>7.5.1</elasticsearch7.client.version>
        <parquet-avro.version>1.10.0</parquet-avro.version>
        <elasticsearch-spark.version>6.8.3</elasticsearch-spark.version>
        <clickhouse-jdbc.version>0.2</clickhouse-jdbc.version>
        <hbase-spark.version>1.0.0</hbase-spark.version>
        <kudu-spark.version>1.7.0</kudu-spark.version>
        <spark-redis.version>2.6.0</spark-redis.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <spark.scope>provided</spark.scope>
        <httpclient.version>4.5.13</httpclient.version>
        <httpcore.version>4.4.4</httpcore.version>
        <httpcore-nio.version>4.4.4</httpcore-nio.version>
        <httpasyncclient.version>4.1.4</httpasyncclient.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <docker.hub>apache</docker.hub>
        <docker.tag>${project.version}</docker.tag>
        <jcommander.version>1.81</jcommander.version>
        <junit.version>4.13.2</junit.version>
        <tispark.version>2.4.1</tispark.version>
        <druid.version>0.22.1</druid.version>
        <sshd.version>2.7.0</sshd.version>
        <calcite-druid.version>1.29.0</calcite-druid.version>
        <config.version>1.3.3</config.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-helper-plugin.version>3.2.0</maven-helper-plugin.version>
        <maven-license-maven-plugin>1.20</maven-license-maven-plugin>
        <influxdb-java.version>2.22</influxdb-java.version>
        <log4j-core.version>2.17.1</log4j-core.version>
        <scalastyle-maven-plugin.version>1.0.0</scalastyle-maven-plugin.version>
        <docker-maven-plugin.version>0.38.0</docker-maven-plugin.version>
        <p3c-pmd.version>1.3.0</p3c-pmd.version>
        <maven-scm-provider-jgit.version>1.9.5</maven-scm-provider-jgit.version>
        <testcontainer.version>1.16.3</testcontainer.version>
        <!-- Option args -->
        <skipUT>false</skipUT>
        <skipIT>true</skipIT>
        <elasticsearch>7</elasticsearch>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--spark-->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>${spark.scope}</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-hdfs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.jpountz.lz4</groupId>
                <artifactId>lz4</artifactId>
                <version>1.3.0</version>
            </dependency>

            <!--Because the license is not in compliance, if you need to use MySQL, you can add it yourself-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.norbitltd</groupId>
                <artifactId>spoiwo_${scala.binary.version}</artifactId>
                <version>${spoiwo.version}</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.play</groupId>
                <artifactId>play-mailer_${scala.binary.version}</artifactId>
                <version>${play-mailer.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.phoenix</groupId>
                <artifactId>phoenix-spark</artifactId>
                <version>${phoenix-spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.web</groupId>
                        <artifactId>javax.servlet.jsp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-hdfs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-avro</artifactId>
                <version>${parquet-avro.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch-spark-20_2.12</artifactId>
                <version>8.1.3</version>
            </dependency>

            <dependency>
                <groupId>ru.yandex.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse-jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hbase.connectors.spark</groupId>
                <artifactId>hbase-spark</artifactId>
                <version>${hbase-spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish.web</groupId>
                        <artifactId>javax.servlet.jsp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-hdfs</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.redislabs</groupId>
                <artifactId>spark-redis_${scala.binary.version}</artifactId>
                <version>${spark-redis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-spark-bundle_${scala.binary.version}</artifactId>
                <version>${hudi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>${httpcore-nio.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${httpasyncclient.version}</version>
            </dependency>

            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-scp</artifactId>
                <version>${sshd.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainer.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.pingcap.tispark</groupId>
                <artifactId>tispark-assembly</artifactId>
                <version>${tispark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.druid</groupId>
                <artifactId>druid-indexing-service</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.calcite</groupId>
                <artifactId>calcite-druid</artifactId>
                <version>${calcite-druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${config.version}</version>
            </dependency>

            <dependency>
                <groupId>org.influxdb</groupId>
                <artifactId>influxdb-java</artifactId>
                <version>${influxdb-java.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-core</artifactId>
                <version>${iceberg.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-spark-runtime</artifactId>
                <version>${iceberg.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.36</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <finalName>${project.artifactId}-${project.version}-${scala.version}</finalName>

        <pluginManagement>
            <plugins>

                <!-- java/scala compiler (Start) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala-maven-plugin.version}</version>
                    <configuration>
                        <args>
                            <arg>-nobootcp</arg>
                            <arg>-target:jvm-${java.version}</arg>
                        </args>
                    </configuration>
                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                        <!-- attach javadocs and sources , -javadoc.jar, sources.jar, to pass mvn deploy-->
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>doc-jar</goal>
                            </goals>
                            <configuration>
                                <skip>${maven.javadoc.skip}</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- java/scala compiler (End) -->

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skip>${skipUT}</skip>
                        <systemPropertyVariables>
                            <jacoco-agent.destfile>${project.build.directory}/jacoco.exec
                            </jacoco-agent.destfile>
                        </systemPropertyVariables>
                        <excludes>
                            <exclude>**/*IT.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <skip>${skipIT}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>

                <!-- shade -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <configuration>
                        <createDependencyReducedPom>false</createDependencyReducedPom>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>

                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <transformers>
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                </transformers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- assembly -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <!-- checkstyle (Start) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <!--suppress UnresolvedMavenProperty -->
                        <configLocation>${maven.multiModuleProjectDirectory}/tools/checkstyle/checkStyle.xml
                        </configLocation>
                        <encoding>UTF-8</encoding>
                        <consoleOutput>true</consoleOutput>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <failOnViolation>${checkstyle.fails.on.error}</failOnViolation>
                        <sourceDirectories>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                        </sourceDirectories>
                        <resourceIncludes>
                            **/*.properties,
                            **/*.sh,
                            **/*.bat,
                            **/*.yml,
                            **/*.yaml,
                            **/*.xml
                        </resourceIncludes>
                        <resourceExcludes>
                            **/.asf.yaml,
                            **/.github/**
                        </resourceExcludes>
                        <excludes>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.scalastyle</groupId>
                    <artifactId>scalastyle-maven-plugin</artifactId>
                    <version>${scalastyle-maven-plugin.version}</version>
                    <configuration>
                        <verbose>false</verbose>
                        <failOnViolation>true</failOnViolation>
                        <includeTestSourceDirectory>false</includeTestSourceDirectory>
                        <failOnWarning>false</failOnWarning>
                        <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                        <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                        <!--suppress UnresolvedMavenProperty -->
                        <configLocation>
                            ${maven.multiModuleProjectDirectory}/tools/checkstyle/scalastyle-config.xml
                        </configLocation>
                        <outputFile>${project.build.directory}/target/scalastyle-output.xml</outputFile>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <rulesets>
                            <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                            <ruleset>rulesets/java/ali-exception.xml</ruleset>
                            <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                            <ruleset>rulesets/java/ali-naming.xml</ruleset>
                            <ruleset>rulesets/java/ali-oop.xml</ruleset>
                            <ruleset>rulesets/java/ali-orm.xml</ruleset>
                            <ruleset>rulesets/java/ali-other.xml</ruleset>
                            <ruleset>rulesets/java/ali-set.xml</ruleset>
                        </rulesets>
                        <printFailingErrors>true</printFailingErrors>
                        <skip>${skip.pmd.check}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.alibaba.p3c</groupId>
                            <artifactId>p3c-pmd</artifactId>
                            <version>${p3c-pmd.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- checkstyle (End) -->

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <failOnError>false</failOnError>
                        <aggregate>true</aggregate>
                        <skip>${maven.javadoc.skip}</skip>
                        <additionalparam>-Xdoclint:none</additionalparam>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven-helper-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${maven-license-maven-plugin}</version>
                    <configuration>
                        <outputDirectory>${project.basedir}/seatunnel-dist/target/</outputDirectory>
                        <thirdPartyFilename>THIRD-PARTY.txt</thirdPartyFilename>
                        <sortArtifactByName>false</sortArtifactByName>
                        <useMissingFile>false</useMissingFile>
                        <addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>
                        <socketTimeout>30000</socketTimeout>
                        <connectTimeout>30000</connectTimeout>
                        <connectionRequestTimeout>30000</connectionRequestTimeout>
                        <excludedScopes>test,provided</excludedScopes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <tagBase>${project.version}</tagBase>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-jgit</artifactId>
                        <version>${maven-scm-provider-jgit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>